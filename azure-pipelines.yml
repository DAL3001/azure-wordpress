# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: 'terraform'
  displayName: 'Terraform'

  jobs:
  - job: 'terraform_plan'
    displayName: 'Terraform Plan'
    steps:

    - task: Bash@3
      displayName: 'Install tflint'
      inputs:
        targetType: 'inline'
        script: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init --config tflint/tflint.config.hcl
          echo "Scanning Terraform code in terraform/"
          echo -e "Files: \n$(ls terraform/*.tf)"
          tflint terraform/*.tf --config tflint/tflint.config.hcl
        workingDirectory: $(System.DefaultWorkingDirectory)

    # Install specific Terraform version
    - task: TerraformInstaller@0
      displayName: 'Terraform install'
      inputs:
        terraformVersion: 1.1.4

    
    # Initialise Terraform with Azure provider and validate
    - task: TerraformTaskV2@2
      displayName: 'Terraform init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: terraform
        backendServiceArm: "AzureDevOps"
        backendAzureRmResourceGroupName: "rg-terraform-states"
        backendAzureRmStorageAccountName: "tfstate135564"
        backendAzureRmContainerName: "tfstate"
        backendAzureRmKey: "wordpress.terraform.tfstate"
